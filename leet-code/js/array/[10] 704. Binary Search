
///problem : 704. Binary Search

Given an array of integers nums which is sorted in ascending order, 
and an integer target, write a function to search target in nums. 
If target exists, then return its index. Otherwise, return -1.

You must write an algorithm with O(log n) runtime complexity.

Input: nums = [-1,0,3,5,9,12], target = 9
Output: 4

Input: nums = [-1,0,3,5,9,12], target = 2
Output: -1


//solution : 

var nums = [-1,0,3,5,9,12]
var target = 90
var search = function(nums, target) {
    var start = 0 ;
    var end = nums.length - 1 ;

    while( start <= end ){
        var mid = parseInt((start + end) / 2)
        if( nums[mid] < target ){
            start = mid + 1 
        }
        else if( nums[mid] > target ){
            end = mid - 1
        }
        else if(nums[mid] === target){
            return mid 
        }
    }

    return -1 
    
};
var x = search(nums ,target)
console.log(x) 

///response from oj : Runtime: 80 ms, faster than 66.30% of JavaScript online submissions for Binary Search.
